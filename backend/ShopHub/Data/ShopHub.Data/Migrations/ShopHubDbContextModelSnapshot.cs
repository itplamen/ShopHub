// <auto-generated />
using System;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;
using ShopHub.Data;

#nullable disable

namespace ShopHub.Data.Migrations
{
    [DbContext(typeof(ShopHubDbContext))]
    partial class ShopHubDbContextModelSnapshot : ModelSnapshot
    {
        protected override void BuildModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "9.0.9")
                .HasAnnotation("Relational:MaxIdentifierLength", 128);

            SqlServerModelBuilderExtensions.UseIdentityColumns(modelBuilder);

            modelBuilder.Entity("Microsoft.AspNetCore.Identity.IdentityRoleClaim<int>", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<string>("ClaimType")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("ClaimValue")
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("RoleId")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.HasIndex("RoleId");

                    b.ToTable("AspNetRoleClaims", (string)null);
                });

            modelBuilder.Entity("Microsoft.AspNetCore.Identity.IdentityUserClaim<int>", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<string>("ClaimType")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("ClaimValue")
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("UserId")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.HasIndex("UserId");

                    b.ToTable("AspNetUserClaims", (string)null);
                });

            modelBuilder.Entity("Microsoft.AspNetCore.Identity.IdentityUserLogin<int>", b =>
                {
                    b.Property<string>("LoginProvider")
                        .HasColumnType("nvarchar(450)");

                    b.Property<string>("ProviderKey")
                        .HasColumnType("nvarchar(450)");

                    b.Property<string>("ProviderDisplayName")
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("UserId")
                        .HasColumnType("int");

                    b.HasKey("LoginProvider", "ProviderKey");

                    b.HasIndex("UserId");

                    b.ToTable("AspNetUserLogins", (string)null);
                });

            modelBuilder.Entity("Microsoft.AspNetCore.Identity.IdentityUserRole<int>", b =>
                {
                    b.Property<int>("UserId")
                        .HasColumnType("int");

                    b.Property<int>("RoleId")
                        .HasColumnType("int");

                    b.HasKey("UserId", "RoleId");

                    b.HasIndex("RoleId");

                    b.ToTable("AspNetUserRoles", (string)null);
                });

            modelBuilder.Entity("Microsoft.AspNetCore.Identity.IdentityUserToken<int>", b =>
                {
                    b.Property<int>("UserId")
                        .HasColumnType("int");

                    b.Property<string>("LoginProvider")
                        .HasColumnType("nvarchar(450)");

                    b.Property<string>("Name")
                        .HasColumnType("nvarchar(450)");

                    b.Property<string>("Value")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("UserId", "LoginProvider", "Name");

                    b.ToTable("AspNetUserTokens", (string)null);
                });

            modelBuilder.Entity("ShopHub.Data.Models.Cart", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<DateTime>("CreatedOn")
                        .HasColumnType("datetime2");

                    b.Property<DateTime?>("DeletedOn")
                        .HasColumnType("datetime2");

                    b.Property<DateTime?>("ModifiedOn")
                        .HasColumnType("datetime2");

                    b.Property<int>("UserId")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.HasIndex("UserId")
                        .IsUnique();

                    b.ToTable("Carts");
                });

            modelBuilder.Entity("ShopHub.Data.Models.CartItem", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<int>("CartId")
                        .HasColumnType("int");

                    b.Property<DateTime>("CreatedOn")
                        .HasColumnType("datetime2");

                    b.Property<DateTime?>("DeletedOn")
                        .HasColumnType("datetime2");

                    b.Property<DateTime?>("ModifiedOn")
                        .HasColumnType("datetime2");

                    b.Property<int>("ProductId")
                        .HasColumnType("int");

                    b.Property<int>("Quantity")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.HasIndex("CartId");

                    b.HasIndex("ProductId");

                    b.ToTable("CartItems");
                });

            modelBuilder.Entity("ShopHub.Data.Models.Notification", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<DateTime>("CreatedOn")
                        .HasColumnType("datetime2");

                    b.Property<DateTime?>("DeletedOn")
                        .HasColumnType("datetime2");

                    b.Property<string>("Message")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime?>("ModifiedOn")
                        .HasColumnType("datetime2");

                    b.Property<int>("Type")
                        .HasColumnType("int");

                    b.Property<int>("UserId")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.HasIndex("UserId");

                    b.ToTable("Notifications");
                });

            modelBuilder.Entity("ShopHub.Data.Models.Product", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<DateTime>("CreatedOn")
                        .HasColumnType("datetime2");

                    b.Property<DateTime?>("DeletedOn")
                        .HasColumnType("datetime2");

                    b.Property<string>("Description")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("ImageUrl")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime?>("ModifiedOn")
                        .HasColumnType("datetime2");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<decimal>("Price")
                        .HasColumnType("decimal(18,4)");

                    b.HasKey("Id");

                    b.ToTable("Products");

                    b.HasData(
                        new
                        {
                            Id = 1,
                            CreatedOn = new DateTime(2025, 9, 12, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            Description = "A powerful laptop with 16GB RAM, 512GB SSD, and Intel i7 processor. Perfect for work and gaming.",
                            ImageUrl = "product_img.jpg",
                            Name = "Laptop",
                            Price = 1200m
                        },
                        new
                        {
                            Id = 2,
                            CreatedOn = new DateTime(2025, 9, 12, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            Description = "Learn modern C# and .NET 8 with practical examples and exercises. Great for beginners and professionals.",
                            ImageUrl = "product_img.jpg",
                            Name = "C# Book",
                            Price = 40m
                        },
                        new
                        {
                            Id = 3,
                            CreatedOn = new DateTime(2025, 9, 12, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            Description = "Latest generation smartphone with 5G support, 128GB storage, and excellent camera quality.",
                            ImageUrl = "product_img.jpg",
                            Name = "Smartphone",
                            Price = 899m
                        },
                        new
                        {
                            Id = 4,
                            CreatedOn = new DateTime(2025, 9, 12, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            Description = "Noise-cancelling wireless headphones with 30 hours of battery life and immersive sound quality.",
                            ImageUrl = "product_img.jpg",
                            Name = "Wireless Headphones",
                            Price = 199m
                        },
                        new
                        {
                            Id = 5,
                            CreatedOn = new DateTime(2025, 9, 12, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            Description = "Ergonomic gaming mouse with customizable RGB lighting and ultra-fast response time.",
                            ImageUrl = "product_img.jpg",
                            Name = "Gaming Mouse",
                            Price = 59.99m
                        },
                        new
                        {
                            Id = 6,
                            CreatedOn = new DateTime(2025, 9, 12, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            Description = "Durable mechanical keyboard with blue switches, backlit keys, and programmable macros.",
                            ImageUrl = "product_img.jpg",
                            Name = "Mechanical Keyboard",
                            Price = 129.50m
                        },
                        new
                        {
                            Id = 7,
                            CreatedOn = new DateTime(2025, 9, 12, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            Description = "Ultra HD 27-inch monitor with vibrant colors, HDR support, and fast refresh rate for smooth gameplay.",
                            ImageUrl = "product_img.jpg",
                            Name = "4K Monitor",
                            Price = 349.99m
                        },
                        new
                        {
                            Id = 8,
                            CreatedOn = new DateTime(2025, 9, 12, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            Description = "Feature-rich smartwatch with health tracking, GPS, and customizable watch faces.",
                            ImageUrl = "product_img.jpg",
                            Name = "Smartwatch",
                            Price = 249.99m
                        },
                        new
                        {
                            Id = 9,
                            CreatedOn = new DateTime(2025, 9, 12, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            Description = "Portable Bluetooth speaker with waterproof design, 20-hour battery, and deep bass.",
                            ImageUrl = "product_img.jpg",
                            Name = "Bluetooth Speaker",
                            Price = 89.99m
                        },
                        new
                        {
                            Id = 10,
                            CreatedOn = new DateTime(2025, 9, 12, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            Description = "1TB high-speed external SSD with USB-C connectivity and compact design.",
                            ImageUrl = "product_img.jpg",
                            Name = "External SSD",
                            Price = 159.99m
                        },
                        new
                        {
                            Id = 11,
                            CreatedOn = new DateTime(2025, 9, 12, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            Description = "Ergonomic office chair with lumbar support, adjustable height, and breathable mesh back.",
                            ImageUrl = "product_img.jpg",
                            Name = "Office Chair",
                            Price = 220m
                        },
                        new
                        {
                            Id = 12,
                            CreatedOn = new DateTime(2025, 9, 12, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            Description = "10-inch tablet with sharp display, stylus support, and long battery life.",
                            ImageUrl = "product_img.jpg",
                            Name = "Tablet",
                            Price = 299.99m
                        },
                        new
                        {
                            Id = 13,
                            CreatedOn = new DateTime(2025, 9, 12, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            Description = "High-capacity 20,000mAh power bank with fast charging and multiple USB outputs.",
                            ImageUrl = "product_img.jpg",
                            Name = "Portable Charger",
                            Price = 49.99m
                        },
                        new
                        {
                            Id = 14,
                            CreatedOn = new DateTime(2025, 9, 12, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            Description = "Compact drone with 4K camera, GPS stabilization, and 30-minute flight time.",
                            ImageUrl = "product_img.jpg",
                            Name = "Drone",
                            Price = 699.00m
                        },
                        new
                        {
                            Id = 15,
                            CreatedOn = new DateTime(2025, 9, 12, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            Description = "Immersive VR headset with high-resolution lenses and wide field of view.",
                            ImageUrl = "product_img.jpg",
                            Name = "VR Headset",
                            Price = 399.00m
                        },
                        new
                        {
                            Id = 16,
                            CreatedOn = new DateTime(2025, 9, 12, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            Description = "Central hub for controlling smart devices, voice assistant support, and automation features.",
                            ImageUrl = "product_img.jpg",
                            Name = "Smart Home Hub",
                            Price = 149.00m
                        },
                        new
                        {
                            Id = 17,
                            CreatedOn = new DateTime(2025, 9, 12, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            Description = "Automatic coffee machine with milk frother, multiple brew sizes, and programmable timer.",
                            ImageUrl = "product_img.jpg",
                            Name = "Coffee Machine",
                            Price = 349.00m
                        },
                        new
                        {
                            Id = 18,
                            CreatedOn = new DateTime(2025, 9, 12, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            Description = "Foldable electric scooter with 25km range, LED display, and durable frame.",
                            ImageUrl = "product_img.jpg",
                            Name = "Electric Scooter",
                            Price = 549.00m
                        },
                        new
                        {
                            Id = 19,
                            CreatedOn = new DateTime(2025, 9, 12, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            Description = "55-inch 4K Smart TV with HDR10, built-in streaming apps, and voice control.",
                            ImageUrl = "product_img.jpg",
                            Name = "Smart TV",
                            Price = 799.00m
                        },
                        new
                        {
                            Id = 20,
                            CreatedOn = new DateTime(2025, 9, 12, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            Description = "Rugged action camera with 4K recording, waterproof housing, and wide-angle lens.",
                            ImageUrl = "product_img.jpg",
                            Name = "Action Camera",
                            Price = 299.00m
                        },
                        new
                        {
                            Id = 21,
                            CreatedOn = new DateTime(2025, 9, 12, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            Description = "A powerful laptop with 16GB RAM, 512GB SSD, and Intel i7 processor. Perfect for work and gaming.",
                            ImageUrl = "product_img.jpg",
                            Name = "Laptop",
                            Price = 1200m
                        },
                        new
                        {
                            Id = 22,
                            CreatedOn = new DateTime(2025, 9, 12, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            Description = "Learn modern C# and .NET 8 with practical examples and exercises. Great for beginners and professionals.",
                            ImageUrl = "product_img.jpg",
                            Name = "C# Book",
                            Price = 40m
                        },
                        new
                        {
                            Id = 23,
                            CreatedOn = new DateTime(2025, 9, 12, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            Description = "Latest generation smartphone with 5G support, 128GB storage, and excellent camera quality.",
                            ImageUrl = "product_img.jpg",
                            Name = "Smartphone",
                            Price = 899m
                        },
                        new
                        {
                            Id = 24,
                            CreatedOn = new DateTime(2025, 9, 12, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            Description = "Noise-cancelling wireless headphones with 30 hours of battery life and immersive sound quality.",
                            ImageUrl = "product_img.jpg",
                            Name = "Wireless Headphones",
                            Price = 199m
                        },
                        new
                        {
                            Id = 25,
                            CreatedOn = new DateTime(2025, 9, 12, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            Description = "Ergonomic gaming mouse with customizable RGB lighting and ultra-fast response time.",
                            ImageUrl = "product_img.jpg",
                            Name = "Gaming Mouse",
                            Price = 59.99m
                        },
                        new
                        {
                            Id = 26,
                            CreatedOn = new DateTime(2025, 9, 12, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            Description = "Durable mechanical keyboard with blue switches, backlit keys, and programmable macros.",
                            ImageUrl = "product_img.jpg",
                            Name = "Mechanical Keyboard",
                            Price = 129.50m
                        },
                        new
                        {
                            Id = 27,
                            CreatedOn = new DateTime(2025, 9, 12, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            Description = "Ultra HD 27-inch monitor with vibrant colors, HDR support, and fast refresh rate for smooth gameplay.",
                            ImageUrl = "product_img.jpg",
                            Name = "4K Monitor",
                            Price = 349.99m
                        },
                        new
                        {
                            Id = 28,
                            CreatedOn = new DateTime(2025, 9, 12, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            Description = "Feature-rich smartwatch with health tracking, GPS, and customizable watch faces.",
                            ImageUrl = "product_img.jpg",
                            Name = "Smartwatch",
                            Price = 249.99m
                        },
                        new
                        {
                            Id = 29,
                            CreatedOn = new DateTime(2025, 9, 12, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            Description = "Portable Bluetooth speaker with waterproof design, 20-hour battery, and deep bass.",
                            ImageUrl = "product_img.jpg",
                            Name = "Bluetooth Speaker",
                            Price = 89.99m
                        },
                        new
                        {
                            Id = 30,
                            CreatedOn = new DateTime(2025, 9, 12, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            Description = "1TB high-speed external SSD with USB-C connectivity and compact design.",
                            ImageUrl = "product_img.jpg",
                            Name = "External SSD",
                            Price = 159.99m
                        },
                        new
                        {
                            Id = 31,
                            CreatedOn = new DateTime(2025, 9, 12, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            Description = "Ergonomic office chair with lumbar support, adjustable height, and breathable mesh back.",
                            ImageUrl = "product_img.jpg",
                            Name = "Office Chair",
                            Price = 220m
                        },
                        new
                        {
                            Id = 32,
                            CreatedOn = new DateTime(2025, 9, 12, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            Description = "10-inch tablet with sharp display, stylus support, and long battery life.",
                            ImageUrl = "product_img.jpg",
                            Name = "Tablet",
                            Price = 299.99m
                        },
                        new
                        {
                            Id = 33,
                            CreatedOn = new DateTime(2025, 9, 12, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            Description = "High-capacity 20,000mAh power bank with fast charging and multiple USB outputs.",
                            ImageUrl = "product_img.jpg",
                            Name = "Portable Charger",
                            Price = 49.99m
                        },
                        new
                        {
                            Id = 34,
                            CreatedOn = new DateTime(2025, 9, 12, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            Description = "Compact drone with 4K camera, GPS stabilization, and 30-minute flight time.",
                            ImageUrl = "product_img.jpg",
                            Name = "Drone",
                            Price = 699.00m
                        },
                        new
                        {
                            Id = 35,
                            CreatedOn = new DateTime(2025, 9, 12, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            Description = "Immersive VR headset with high-resolution lenses and wide field of view.",
                            ImageUrl = "product_img.jpg",
                            Name = "VR Headset",
                            Price = 399.00m
                        },
                        new
                        {
                            Id = 36,
                            CreatedOn = new DateTime(2025, 9, 12, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            Description = "Central hub for controlling smart devices, voice assistant support, and automation features.",
                            ImageUrl = "product_img.jpg",
                            Name = "Smart Home Hub",
                            Price = 149.00m
                        },
                        new
                        {
                            Id = 37,
                            CreatedOn = new DateTime(2025, 9, 12, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            Description = "Automatic coffee machine with milk frother, multiple brew sizes, and programmable timer.",
                            ImageUrl = "product_img.jpg",
                            Name = "Coffee Machine",
                            Price = 349.00m
                        },
                        new
                        {
                            Id = 38,
                            CreatedOn = new DateTime(2025, 9, 12, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            Description = "Foldable electric scooter with 25km range, LED display, and durable frame.",
                            ImageUrl = "product_img.jpg",
                            Name = "Electric Scooter",
                            Price = 549.00m
                        },
                        new
                        {
                            Id = 39,
                            CreatedOn = new DateTime(2025, 9, 12, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            Description = "55-inch 4K Smart TV with HDR10, built-in streaming apps, and voice control.",
                            ImageUrl = "product_img.jpg",
                            Name = "Smart TV",
                            Price = 799.00m
                        },
                        new
                        {
                            Id = 40,
                            CreatedOn = new DateTime(2025, 9, 12, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            Description = "Rugged action camera with 4K recording, waterproof housing, and wide-angle lens.",
                            ImageUrl = "product_img.jpg",
                            Name = "Action Camera",
                            Price = 299.00m
                        },
                        new
                        {
                            Id = 41,
                            CreatedOn = new DateTime(2025, 9, 12, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            Description = "A powerful laptop with 16GB RAM, 512GB SSD, and Intel i7 processor. Perfect for work and gaming.",
                            ImageUrl = "product_img.jpg",
                            Name = "Laptop",
                            Price = 1200m
                        },
                        new
                        {
                            Id = 42,
                            CreatedOn = new DateTime(2025, 9, 12, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            Description = "Learn modern C# and .NET 8 with practical examples and exercises. Great for beginners and professionals.",
                            ImageUrl = "product_img.jpg",
                            Name = "C# Book",
                            Price = 40m
                        },
                        new
                        {
                            Id = 43,
                            CreatedOn = new DateTime(2025, 9, 12, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            Description = "Latest generation smartphone with 5G support, 128GB storage, and excellent camera quality.",
                            ImageUrl = "product_img.jpg",
                            Name = "Smartphone",
                            Price = 899m
                        },
                        new
                        {
                            Id = 44,
                            CreatedOn = new DateTime(2025, 9, 12, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            Description = "Noise-cancelling wireless headphones with 30 hours of battery life and immersive sound quality.",
                            ImageUrl = "product_img.jpg",
                            Name = "Wireless Headphones",
                            Price = 199m
                        },
                        new
                        {
                            Id = 45,
                            CreatedOn = new DateTime(2025, 9, 12, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            Description = "Ergonomic gaming mouse with customizable RGB lighting and ultra-fast response time.",
                            ImageUrl = "product_img.jpg",
                            Name = "Gaming Mouse",
                            Price = 59.99m
                        },
                        new
                        {
                            Id = 46,
                            CreatedOn = new DateTime(2025, 9, 12, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            Description = "Durable mechanical keyboard with blue switches, backlit keys, and programmable macros.",
                            ImageUrl = "product_img.jpg",
                            Name = "Mechanical Keyboard",
                            Price = 129.50m
                        },
                        new
                        {
                            Id = 47,
                            CreatedOn = new DateTime(2025, 9, 12, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            Description = "Ultra HD 27-inch monitor with vibrant colors, HDR support, and fast refresh rate for smooth gameplay.",
                            ImageUrl = "product_img.jpg",
                            Name = "4K Monitor",
                            Price = 349.99m
                        },
                        new
                        {
                            Id = 48,
                            CreatedOn = new DateTime(2025, 9, 12, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            Description = "Feature-rich smartwatch with health tracking, GPS, and customizable watch faces.",
                            ImageUrl = "product_img.jpg",
                            Name = "Smartwatch",
                            Price = 249.99m
                        },
                        new
                        {
                            Id = 49,
                            CreatedOn = new DateTime(2025, 9, 12, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            Description = "Portable Bluetooth speaker with waterproof design, 20-hour battery, and deep bass.",
                            ImageUrl = "product_img.jpg",
                            Name = "Bluetooth Speaker",
                            Price = 89.99m
                        },
                        new
                        {
                            Id = 50,
                            CreatedOn = new DateTime(2025, 9, 12, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            Description = "1TB high-speed external SSD with USB-C connectivity and compact design.",
                            ImageUrl = "product_img.jpg",
                            Name = "External SSD",
                            Price = 159.99m
                        },
                        new
                        {
                            Id = 51,
                            CreatedOn = new DateTime(2025, 9, 12, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            Description = "Ergonomic office chair with lumbar support, adjustable height, and breathable mesh back.",
                            ImageUrl = "product_img.jpg",
                            Name = "Office Chair",
                            Price = 220m
                        },
                        new
                        {
                            Id = 52,
                            CreatedOn = new DateTime(2025, 9, 12, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            Description = "10-inch tablet with sharp display, stylus support, and long battery life.",
                            ImageUrl = "product_img.jpg",
                            Name = "Tablet",
                            Price = 299.99m
                        },
                        new
                        {
                            Id = 53,
                            CreatedOn = new DateTime(2025, 9, 12, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            Description = "High-capacity 20,000mAh power bank with fast charging and multiple USB outputs.",
                            ImageUrl = "product_img.jpg",
                            Name = "Portable Charger",
                            Price = 49.99m
                        },
                        new
                        {
                            Id = 54,
                            CreatedOn = new DateTime(2025, 9, 12, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            Description = "Compact drone with 4K camera, GPS stabilization, and 30-minute flight time.",
                            ImageUrl = "product_img.jpg",
                            Name = "Drone",
                            Price = 699.00m
                        },
                        new
                        {
                            Id = 55,
                            CreatedOn = new DateTime(2025, 9, 12, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            Description = "Immersive VR headset with high-resolution lenses and wide field of view.",
                            ImageUrl = "product_img.jpg",
                            Name = "VR Headset",
                            Price = 399.00m
                        },
                        new
                        {
                            Id = 56,
                            CreatedOn = new DateTime(2025, 9, 12, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            Description = "Central hub for controlling smart devices, voice assistant support, and automation features.",
                            ImageUrl = "product_img.jpg",
                            Name = "Smart Home Hub",
                            Price = 149.00m
                        },
                        new
                        {
                            Id = 57,
                            CreatedOn = new DateTime(2025, 9, 12, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            Description = "Automatic coffee machine with milk frother, multiple brew sizes, and programmable timer.",
                            ImageUrl = "product_img.jpg",
                            Name = "Coffee Machine",
                            Price = 349.00m
                        },
                        new
                        {
                            Id = 58,
                            CreatedOn = new DateTime(2025, 9, 12, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            Description = "Foldable electric scooter with 25km range, LED display, and durable frame.",
                            ImageUrl = "product_img.jpg",
                            Name = "Electric Scooter",
                            Price = 549.00m
                        },
                        new
                        {
                            Id = 59,
                            CreatedOn = new DateTime(2025, 9, 12, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            Description = "55-inch 4K Smart TV with HDR10, built-in streaming apps, and voice control.",
                            ImageUrl = "product_img.jpg",
                            Name = "Smart TV",
                            Price = 799.00m
                        },
                        new
                        {
                            Id = 60,
                            CreatedOn = new DateTime(2025, 9, 12, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            Description = "Rugged action camera with 4K recording, waterproof housing, and wide-angle lens.",
                            ImageUrl = "product_img.jpg",
                            Name = "Action Camera",
                            Price = 299.00m
                        });
                });

            modelBuilder.Entity("ShopHub.Data.Models.RefreshToken", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<DateTime>("CreatedOn")
                        .HasColumnType("datetime2");

                    b.Property<DateTime?>("DeletedOn")
                        .HasColumnType("datetime2");

                    b.Property<string>("DeviceId")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("DeviceName")
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime>("ExpiryDate")
                        .HasColumnType("datetime2");

                    b.Property<string>("IPAddress")
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime?>("ModifiedOn")
                        .HasColumnType("datetime2");

                    b.Property<string>("Token")
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("UserId")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.HasIndex("UserId");

                    b.ToTable("RefreshTokens");
                });

            modelBuilder.Entity("ShopHub.Data.Models.Role", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<string>("ConcurrencyStamp")
                        .IsConcurrencyToken()
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime>("CreatedOn")
                        .HasColumnType("datetime2");

                    b.Property<DateTime?>("DeletedOn")
                        .HasColumnType("datetime2");

                    b.Property<bool>("IsDeleted")
                        .HasColumnType("bit");

                    b.Property<DateTime?>("ModifiedOn")
                        .HasColumnType("datetime2");

                    b.Property<string>("Name")
                        .HasMaxLength(256)
                        .HasColumnType("nvarchar(256)");

                    b.Property<string>("NormalizedName")
                        .HasMaxLength(256)
                        .HasColumnType("nvarchar(256)");

                    b.HasKey("Id");

                    b.HasIndex("NormalizedName")
                        .IsUnique()
                        .HasDatabaseName("RoleNameIndex")
                        .HasFilter("[NormalizedName] IS NOT NULL");

                    b.ToTable("AspNetRoles", (string)null);
                });

            modelBuilder.Entity("ShopHub.Data.Models.User", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<int>("AccessFailedCount")
                        .HasColumnType("int");

                    b.Property<int>("Age")
                        .HasColumnType("int");

                    b.Property<string>("City")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("ConcurrencyStamp")
                        .IsConcurrencyToken()
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime>("CreatedOn")
                        .HasColumnType("datetime2");

                    b.Property<DateTime?>("DeletedOn")
                        .HasColumnType("datetime2");

                    b.Property<string>("Email")
                        .HasMaxLength(256)
                        .HasColumnType("nvarchar(256)");

                    b.Property<bool>("EmailConfirmed")
                        .HasColumnType("bit");

                    b.Property<string>("FullName")
                        .HasColumnType("nvarchar(max)");

                    b.Property<bool>("LockoutEnabled")
                        .HasColumnType("bit");

                    b.Property<DateTimeOffset?>("LockoutEnd")
                        .HasColumnType("datetimeoffset");

                    b.Property<DateTime?>("ModifiedOn")
                        .HasColumnType("datetime2");

                    b.Property<string>("NormalizedEmail")
                        .HasMaxLength(256)
                        .HasColumnType("nvarchar(256)");

                    b.Property<string>("NormalizedUserName")
                        .HasMaxLength(256)
                        .HasColumnType("nvarchar(256)");

                    b.Property<string>("Password")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("PasswordHash")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("PhoneNumber")
                        .HasColumnType("nvarchar(max)");

                    b.Property<bool>("PhoneNumberConfirmed")
                        .HasColumnType("bit");

                    b.Property<string>("SecurityStamp")
                        .HasColumnType("nvarchar(max)");

                    b.Property<bool>("TwoFactorEnabled")
                        .HasColumnType("bit");

                    b.Property<string>("UserName")
                        .HasMaxLength(256)
                        .HasColumnType("nvarchar(256)");

                    b.HasKey("Id");

                    b.HasIndex("NormalizedEmail")
                        .HasDatabaseName("EmailIndex");

                    b.HasIndex("NormalizedUserName")
                        .IsUnique()
                        .HasDatabaseName("UserNameIndex")
                        .HasFilter("[NormalizedUserName] IS NOT NULL");

                    b.ToTable("AspNetUsers", (string)null);
                });

            modelBuilder.Entity("Microsoft.AspNetCore.Identity.IdentityRoleClaim<int>", b =>
                {
                    b.HasOne("ShopHub.Data.Models.Role", null)
                        .WithMany()
                        .HasForeignKey("RoleId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });

            modelBuilder.Entity("Microsoft.AspNetCore.Identity.IdentityUserClaim<int>", b =>
                {
                    b.HasOne("ShopHub.Data.Models.User", null)
                        .WithMany()
                        .HasForeignKey("UserId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });

            modelBuilder.Entity("Microsoft.AspNetCore.Identity.IdentityUserLogin<int>", b =>
                {
                    b.HasOne("ShopHub.Data.Models.User", null)
                        .WithMany()
                        .HasForeignKey("UserId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });

            modelBuilder.Entity("Microsoft.AspNetCore.Identity.IdentityUserRole<int>", b =>
                {
                    b.HasOne("ShopHub.Data.Models.Role", null)
                        .WithMany()
                        .HasForeignKey("RoleId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("ShopHub.Data.Models.User", null)
                        .WithMany()
                        .HasForeignKey("UserId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });

            modelBuilder.Entity("Microsoft.AspNetCore.Identity.IdentityUserToken<int>", b =>
                {
                    b.HasOne("ShopHub.Data.Models.User", null)
                        .WithMany()
                        .HasForeignKey("UserId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });

            modelBuilder.Entity("ShopHub.Data.Models.Cart", b =>
                {
                    b.HasOne("ShopHub.Data.Models.User", "User")
                        .WithOne("Cart")
                        .HasForeignKey("ShopHub.Data.Models.Cart", "UserId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("User");
                });

            modelBuilder.Entity("ShopHub.Data.Models.CartItem", b =>
                {
                    b.HasOne("ShopHub.Data.Models.Cart", "Cart")
                        .WithMany("Items")
                        .HasForeignKey("CartId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("ShopHub.Data.Models.Product", "Product")
                        .WithMany("CartItems")
                        .HasForeignKey("ProductId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Cart");

                    b.Navigation("Product");
                });

            modelBuilder.Entity("ShopHub.Data.Models.Notification", b =>
                {
                    b.HasOne("ShopHub.Data.Models.User", "User")
                        .WithMany("Notifications")
                        .HasForeignKey("UserId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("User");
                });

            modelBuilder.Entity("ShopHub.Data.Models.RefreshToken", b =>
                {
                    b.HasOne("ShopHub.Data.Models.User", "User")
                        .WithMany("RefreshTokens")
                        .HasForeignKey("UserId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("User");
                });

            modelBuilder.Entity("ShopHub.Data.Models.Cart", b =>
                {
                    b.Navigation("Items");
                });

            modelBuilder.Entity("ShopHub.Data.Models.Product", b =>
                {
                    b.Navigation("CartItems");
                });

            modelBuilder.Entity("ShopHub.Data.Models.User", b =>
                {
                    b.Navigation("Cart");

                    b.Navigation("Notifications");

                    b.Navigation("RefreshTokens");
                });
#pragma warning restore 612, 618
        }
    }
}
